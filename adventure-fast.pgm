10,0
11,62
12,126
13,177
14,185
15,250
16,328
17,402
18,410
19,495
20,575
21,628
22,654
23,725
44,795
45,874
46,900
47,921
50,944
51,961
52,979
53,995
54,1012
70,2355
110,2391
130,2411
150,2452
160,2492
161,2599
162,2705
170,2720
171,2742
172,2775
175,2788
182,2821
190,2862
192,2913
193,2936
194,3011
195,3134
196,3258
197,3275
198,3288
200,3303
210,3320
220,3356
221,3385
222,3524
228,3541
230,-3554
231,-3587
232,-3619
233,-3653
234,-3682
235,-3714
236,-3744
240,3778
241,3808
242,3947
243,3964
245,-3977
246,-4005
247,-4033
260,4061
263,4097
264,4125
266,4141
267,4170
280,4198
300,4229
310,4256
320,4305
321,4341
330,4404
340,4431
350,4445
360,4485
370,4503
375,4519
380,4546
390,4562
400,4629
410,4662
420,4703
425,4728
431,4758
432,4788
433,4812
449,4853
450,4919
460,4948
470,4986
471,5074
480,5136
490,5148
500,5188
510,5289
520,5340
800,5365
870,5405
871,5459
872,5530
873,5559
874,5613
890,5684
900,5706
910,5719
920,5768
930,5826
940,5842
950,5899
980,5913
990,5964
1000,6015
1010,6048
1020,6070
1030,6126
1040,6139
1050,6173
1060,6189
1070,6221
1130,6248
1140,6276
1150,6314
1160,6338
1170,6382
1180,6398
1190,6422
1191,6465
1200,6485
1220,6501
1221,6515
1230,6532
1240,6547
1250,6581
1260,6597
1261,6648
1270,6708
1280,6750
1290,6775
1300,6803
1310,6818
1320,6856
1330,6919
1340,6947
1350,6962
1360,6999
1370,7065
1380,7087
1390,7114
1400,7129
1410,7156
1420,7213
1430,7239
1440,7267
1460,7282
1470,7323
1480,7351
1490,7380
1500,7408
1510,7423
1520,7442
1530,-7464
1540,7498
1550,7538
1560,7552
1570,7566
1580,7582
1590,7603
1600,7631
1610,7664
1620,7694
1630,7707
1640,7735
1650,7750
1660,7764
1670,7778
1680,7794
1690,7818
1691,7864
1700,7955
1710,7978
1720,8005
1730,8040
1740,8068
1750,8083
1760,8097
1770,8113
1780,8129
1781,8166
1790,8213
1800,8259
1810,8287
1820,8302
1821,8330
1830,8358
1840,8381
1850,8393
1860,8409
1870,8465
1880,8493
1890,8508
1900,8571
1910,8588
1920,8616
1940,8631
1950,8656
1960,8723
1980,8790
1990,8817
1991,8867
2000,8927
2020,8949
2021,8998
2022,9021
2023,9035
2030,9050
2040,9063
2050,9082
2051,9121
2052,9135
2060,9148
2070,-9163
2080,9263
2090,9278
2095,9298
2110,9593
2120,9609
2130,9633
2140,9660
2150,9701
2160,9715
2170,9731
2180,9759
2190,9772
2200,9788
2210,9815
2220,9830
2230,9854
2240,9881
2250,9922
2260,9936
2270,9952
2280,9980
2290,9993
2300,10009
2310,10065
2320,10092
2325,10126
2330,10145
2335,10180
2340,10200
2350,10214
2360,10230
2370,10258
2380,10272
2390,10288
2400,10312
2410,10340
2420,10367
2430,10394
2440,10409
2450,10421
2460,10473
2470,10489
2480,10517
2490,10543
2500,10555
2510,10571
2520,10599
2530,10611
2540,10627
2550,10655
2560,10667
2570,10683
2580,10707
2590,10735
2600,10769
2610,10795
2620,10809
2630,10823
2640,10839
2650,10880
2660,10947
2670,10974
2680,10990
2690,11005
2700,11039
2710,11059
2720,11098
2730,11113
2740,11139
2750,11166
2760,11181
2770,11271
2780,11301
2790,11317
2800,11344
2810,11361
2820,11401
2830,11416
2840,11446
2850,11486
2860,11501
2870,11525
2880,11559
2890,11575
2900,11613
2910,11646
2920,11668
2930,11683
2940,11706
2941,11744
2950,11809
2960,11837
2970,11852
2980,11869
2990,11886
3000,11901
3010,11925
3020,11959
3030,11977
3040,11993
3050,12005
3060,12021
3070,12057
3080,12073
3090,12108
3100,12142
3110,12158
3120,12183
3130,12199
3140,12223
3150,12250
3160,12269
3170,12281
3180,12297
3190,12325
3200,12350
3210,12362
3240,12378
3250,12401
3260,12429
3270,12468
3280,12482
3290,12498
3300,12521
3310,12548
3320,12570
3330,12582
3340,12598
3350,12626
3360,12654
3370,12666
3400,12682
3410,12705
3420,12733
3430,12772
3440,12786
3450,12802
3470,12830
3480,12843
3490,12877
3510,12899
3511,12933
3520,12966
3530,12981
3540,12999
3550,13012
3551,13048
3560,13071
3570,13083
3590,13098
3630,13120
3640,13168
3650,13185
3660,13211
3670,13235
3680,13251
3710,13274
3720,13322
3730,13373
3740,13407
3750,13440
3760,13488
3770,13548
3780,13564
3790,13617
3800,13630
3810,13652
3811,13686
3820,13704
3830,13717
3840,13743
3850,13771
3860,13799
3870,13814
3880,13830
3890,13851
3900,13908
3910,13922
3920,13937
3940,13960
3950,14008
3960,14025
3970,14051
3980,14076
4000,14092
4030,14115
4040,14163
4050,14214
4060,14246
4070,14280
4080,14328
4090,14397
4100,14413
4110,14478
4120,14494
4130,14553
4140,14573
4150,14587
4160,14602
4170,14626
4180,14643
4190,14669
4200,14695
4210,14711
4220,14746
4230,14799
4240,14833
4241,14861
4260,14899
4270,14952
4280,14987
4281,15015
4300,15046
4310,15099
4320,15130
4330,15159
4340,15187
4350,15204
4360,15220
4361,15248
4380,15279
4390,15321
4391,15355
4400,15372
4410,15394
4415,15414
4420,15442
4430,15457
4440,15482
4450,15499
4460,15564
4470,15593
4480,15621
4490,15636
4500,15664
4501,15692
4520,15731
4530,15765
4540,15797
4560,15830
4570,15876
4580,15912
4590,15940
4600,15955
4610,15983
4620,16011
4630,16026
4640,16049
4650,16066
4660,16094
4670,16122
4680,16150
4690,16165
4700,16199
4720,16229
4730,16256
4740,16287
4750,16315
4760,16330
4770,16363
4790,16414
4800,16429
4810,16453
4820,16487
4840,16518
4850,16546
4851,16584
4852,16610
4853,16636
4860,16662
4870,16689
4890,16737
4900,16764
4920,16812
4930,16839
4950,16887
4960,16910
4970,16948
4980,16975
4990,16991
5000,17025
5020,17055
5040,17091
5060,17106
5070,17131
5080,17166
5090,17207
5110,17243
5120,17258
5130,17286
5140,17312
5150,17340
5160,17355
5165,17381
5170,17402
5180,17430
5190,17445
5200,17468
5210,17516
5220,17555
5230,17582
5240,17597
5250,17632
5260,17661
5270,17682
5280,17710
5290,17736
5300,17755
5310,17818
5320,17845
5330,17873
5350,17912
5360,17939
5380,17971
5381,18008
5390,18047
5400,18066
5410,18081
5420,18104
5430,18155
5440,18189
5460,18218
5470,18249
5480,18290
5490,18304
5491,18337
5492,18363
5500,18389
5510,18417
5530,18441
5540,18469
5560,18493
5570,18516
5580,18533
5590,18559
5610,18593
5620,18620
5630,18653
5650,18704
5660,18731
5680,18789
5690,18822
5700,18850
5710,18865
5720,18897
5730,18954
5740,18988
5750,19062
5760,19077
5770,19101
5780,19118
5790,19145
5800,19173
5810,19188
5820,19202
5830,19253
5840,19287
5860,19316
5870,19344
5880,19375
5890,19401
5900,19462
5910,19477
5920,19499
5930,19547
5940,19575
5950,19590
5970,19617
5980,19642
6000,19670
6010,19694
6020,19742
6030,19770
6040,19785
6060,19812
6070,19837
6071,19865
6090,19904
6100,19938
6110,19965
6120,19992
6130,20007
6140,20040
6150,20067
6160,20095
6180,20124
6190,20154
6200,20173
6210,20203
6220,20231
6230,20246
6240,20270
6250,20303
6270,20327
6280,20350
6290,20382
6310,20406
6320,20430
6330,20502
6350,20526
6360,20549
6370,20575
6380,20592
6390,20618
6400,20634
6410,20654
6420,20671
6430,20686
6440,20717
6450,20734
6451,20772
6460,20843
6470,-20862
6480,20935
6481,20971
6482,20998
6483,21011
6484,21034
6485,21048
6490,21062
6500,21116
6510,21129
6520,21161
6530,21179
6540,21201
6550,21224
6560,21238
6570,21264
6575,21297
6580,21326
6585,21359
6590,21388
6600,21402
6605,21544
6610,21659
6620,21682
6621,21715
6630,21747
6640,21761
6660,21774
6680,21810
6690,21830
6700,21853
6710,21874
6711,21908
6720,21923
6721,21937
6722,21972
6730,22000
6740,22033
6745,22050
6750,22078
6760,22095
6770,22107
6775,22120
6780,22159
6820,22179
6830,22202
6840,22223
6850,22237
6860,22256
6870,22271
6880,22284
6890,22307
6900,22364
6910,22406
6920,22434
6930,22449
6940,22494
6950,22510
6960,22538
6970,22554
6980,22590
6990,22637
7000,22665
7010,22681
7020,22727
7030,22752
7040,22780
7050,22796
7060,22842
7070,22882
7080,22916
7090,22932
7100,22974
7110,23013
7140,23068
7150,23096
7160,23119
7170,23146
7180,23187
7210,23242
7220,23276
7240,23306
7250,23340
7260,23366
7280,23408
7290,23434
7300,23462
7310,23478
7320,23521
7330,23563
7340,23597
7360,23623
7370,23639
7380,23664
7390,23692
7400,23715
7410,23760
7415,23788
7420,23814
7425,23841
7430,23867
7440,23883
7450,23921
7460,23949
7470,23966
7480,23992
7490,24039
7500,24069
7520,24106
7530,24152
7541,24197
7542,24264
7543,24292
7550,24346
7560,24373
7570,24406
7580,24439
7581,24467
7600,24512
7610,24540
7619,24556
7620,24580
7630,24615
7640,24633
7645,24679
7650,24721
7660,24781
7670,24804
7672,24826
7673,24871
7690,24887
7700,24930
7705,24966
7710,25002
7712,25038
7720,25074
7730,25096
7740,25142
7750,25158
7760,25174
7770,25228
7800,25241
7810,25251
7820,25284
7830,25294
7840,25310
7842,25358
7850,25394
7860,25419
7861,25482
7870,25510
7880,25532
7881,25583
7890,25611
7900,25631
7901,25679
7910,25707
7920,25723
7921,25785
7930,25813
7940,25828
7941,25876
7950,25904
7951,25952
7960,25980
7970,26003
7971,26051
7980,26084
7990,26097
8000,26107
8010,26166
8020,26219
8030,26244
8040,26307
8050,26326
8060,26352
8070,26381
8080,26397
8090,26455
8100,26484
8110,26500
8120,26529
8130,26563
8180,26576
8190,26635
8200,26699
8201,26741
8202,26758
8210,26774
8220,26832
8230,26851
8235,26868
8240,26881
8250,26891
8260,26937
8270,26981
8280,27016
8300,27048
8320,27071
8330,27122
8340,27140
8350,27184
8351,27227
8352,27280
8360,27294
8370,27308
8380,27322
8390,27335
8400,27369
8410,27382
8415,27405
8430,27431
8431,27489
8440,27532
8450,27546
8460,27559
8470,27570
8480,27614
8490,27624
8500,27658
8510,27697
8520,27710
8530,27723
8540,27736
8550,27749
8560,27773
8570,27800
8580,27838
8590,27865
8600,27895
8610,27919
8620,27947
8630,27976
8640,27992
8650,28023
8652,28051
8660,28082
8670,28116
8680,28145
8690,28160
8700,28188
8705,28230
8706,28251
8707,28280
8710,28295
8720,28324
8730,28338
8740,28365
8750,28392
8760,28417
8770,28433
8780,28471
8785,28501
8786,28521
8790,28549
8800,28562
8810,28587
8820,28642
8830,28655
8840,28682
8850,28704
8855,28738
8860,28756
8870,28769
8880,28813
8890,28856
8900,28886
8910,28914
8920,28930
8930,28958
8940,28980
8945,29014
8950,29034
8960,29047
8970,29060
8980,29088
8990,29148
9000,29190
9010,29206
9020,29248
9030,29263
9040,29500
9041,29522
9042,29564
9043,29577
9044,29605
9050,29621
9051,29646
9060,29659
9070,29709
9080,29724
9090,29756
9100,29782
9110,29828
9120,29843
9130,29879
9140,29920
9150,29936
9160,29975
9170,29990
9171,30109
9180,30133
9191,30155
9192,30211
9193,30224
9194,30262
9200,30278
9210,30291
9220,30306
9230,30342
9240,30359
9250,30386
9260,30414
9270,30429
9280,30463
9290,30485
9300,30501
9310,30531
9320,30560
9330,30575
9340,30597
9341,30622
9390,30664
9400,30695
9410,30723
9420,30744
9430,30817
9440,30839
9450,30856
9460,30871
9470,30898
9480,30919
9490,30933
9500,30976
9510,30992
9540,31007
9550,31033
9560,31051
9561,31077
9562,31103
9570,31129
9580,31178
9590,31206
9600,31223
9610,31239
9620,31267
9630,31283
9640,31309
9650,31337
9660,31390
9670,31440
9680,31462
9685,31496
9690,31515
9700,31528
9710,31596
9720,31637
9730,31652
9740,31687
9750,31715
9760,31740
9762,31757
9770,31797
9780,31808
9790,31831
9791,31857
9800,31921
9810,31963
9820,32122
9830,32137
9840,32166
9850,32194
9860,32210
9870,32245
9875,32260
9877,32295
9880,32310
9890,32352
9900,32395
9901,32433
9910,32446
9911,32484
9920,32497
9930,32513
9940,32540
9945,32556
9950,32569
9961,-32611
9962,-32642
9963,-32670
9964,-32700
9965,-32724
9966,-32754
9967,-32785
9968,-32815
9969,-32848
9970,-32885
9971,-32916
9972,-32946
9973,-32972
9974,-32997
9975,-33022
9976,-33050
9977,-33069
9978,-33086
9979,-33110
9980,-33128
9981,-33146
9982,-33166
9983,-33191
9984,-33221
9985,-33239
9986,-33261
9987,-33279
9988,-33296
9989,-33323
9990,-33354
9991,-33374
9992,-33392
9993,-33411
9994,-33431
9995,-33450
9996,-33469
9997,-33487
9998,-33507
9999,-33526
10000,-33545
10001,-33565
10002,-33586
10003,-33605
10004,-33626
10005,-33644
10006,-33666
10007,-33685
12500,33710
12501,33746
12502,33801
12504,33819
12505,33873
12506,33918
12520,33991
12522,34027
12530,34049
12531,34096
12540,34130
12550,34160
12560,34204
12570,34240
12571,34277
12572,34304
12573,34346
12574,34445
12576,34478
12580,34496
12581,34530
12585,34573
12590,34592
12591,34610
12592,34649
12593,34676
12594,34709
12595,34723
12596,34748
12597,34765
12600,34805
12604,34823
12610,34869
12612,34895
12615,34914
12620,34945
12630,34981
12640,34995
12641,35016
12650,35035
12660,35066
12670,35119
12680,35152
-999,-999
10 REM ADVENTURE/3000 VERSION 3.2     27 FEB 1979 AT 5:30 PM
11 REM THIS PROGRAM IS RELATIVELY BUG-FREE, BUT ONE STILL MUST
12 REM realize that murphy 'S LAW STILL PREVAILS!
13 REM
14 REM ADVENTURE: PROGRAMMED IN HP/3000 BASIC BY BENJAMIN MOSER
15 REM JAMES MADISON HIGH SCHOOL, VIENNA, VIRGINIA.  THE BASIC LAYOUT OF THE
16 REM GAME WAS CONCEIVED BY DON WOODS & WILLIE CROWTHER, BOTH OF M.I.T.
17 REM
18 REM ADVENTURE WAS PORTED TO THE MACINTOSH PLUS BY THE ELIZABETH AND DAVID HUNTER
19 REM IN MARCH 1998 AND THEN TO PYBASIC FOR THE RASPBERRY RP2040 IN JUNE 2021
20 REM print "Adventure 3.2 on ";date$;" at ";time$
21 PRINT "Adventure 3.2"
22 OPEN "AMESSAGE" FOR INPUT AS # 3 : OPEN "AMOVING" FOR INPUT AS # 4
23 OPEN "ADESCRIP" FOR INPUT AS # 1 : OPEN "AITEMS" FOR INPUT AS # 2
44 REM dirs is an array of possible room directions, it replaces file AMOVING
45 DIM DIRS ( 100 , 10 )
46 DIM INDX ( 303 )
47 DIM FRAINDX ( 10 )
50 DIM S ( 99 )
51 DIM V ( 100 )
52 DIM K ( 2 )
53 DIM O ( 15 )
54 STRING$ = "100 N 101 NE 102 E 103 SE 104 S 105 SW 106 W 107 NW 108 U 109 D 110 PLUGH 111 XYZZY 112 PLOVER 113 CROSS 114 CLIMB 115 JUMP 116 FILL 117 EMPTY 117 POUR 118 LOOK 118 L 119 LIGHT 119 ON 120 EXTINGUISH 120 OFF 121 IN 121 ENTER 122 LEAVE 122 OUT 123 INVENTORY 123 I 124 GET 124 CATCH 124 TAKE 125 DROP 125 DUMP 047 ALL 047 EVERYTHING 126 THROW 127 ATTACK 127 KILL 128 FEED 129 WATER 130 LOCK 131 UNLOCK 132 FREE 132 RELEASE 133 WAVE 134 OPEN 135 CLOSE 136 OIL 137 EAT 138 DRINK 139 FEE FIE FOE FOO 140 SHORT 141 LONG 142 BRIEF 143 QUIT 143 STOP 143 END 144 SCORE 145 SAVE 146 LOAD 147 READ 147 EXAMINE 148 YES 148 Y 149 BUG 001 GOLD 001 NUGGET 002 BARS 002 SILVER 003 JEWELRY 004 COINS 005 DIAMONDS 006 MING 006 VASE 007 PEARL 008 EGGS 008 NEST 009 TRIDENT 010 EMERALD 011 PLATINUM 011 PYRAMID 012 CHAIN 013 SPICES 014 PERSIAN 014 RUG 015 TREASURE 015 CHEST 016 WATER 017 OIL 018 LAMP 018 LANTERN 019 KEYS 020 FOOD 021 BOTTLE 022 CAGE 023 ROD 023 WAND 024 CLAM 025 MAGAZINE 026 BEAR 027 AXE 028 VELVET 028 PILLOW 029 SHARDS 030 OYSTER 031 BIRD 032 TROLL 033 DRAGON 034 SNAKE 035 DWARF 036 ROCK 036 BOULDER 037 STAIRS 038 STEPS 039 HOUSE 039 BUILDING 040 GRATE 041 STREAM 042 ROOM 043 BRIDGE 044 PIT 045 VOLCANO 046 ROAD 100 NORTH 101 NORTHEAST 102 EAST 103 SOUTHEAST 104 SOUTH 105 SOUTHWEST 106 WEST 107 NORTHWEST 108 UP 109 DOWN "
70 PRINT : PRINT "Initializing." ;
110 REM initialize
130 REM total rooms, items,and keywords
150 L1 = INT ( RND * 4 ) + 1 : L2 = L1
160 G = 0 : B0 = 1 : SN = 1 : D1 = 1 : D2 = 0 : T = 1 : B1 = 0 : B2 = 0 : P1 = 0 : DEAD = 0 : LASTC$ = ""
161 L = 0 : C = 0 : D3 = 0 : B3 = 0 : D0 = 2 : T1 = 100 : T2 = 35 : T3 = 149 : R0 = 0 : C0 = 0 : C$ = ""
162 KC = 1.03
170 FOR II = 1 TO 99
171 S ( II ) = 0 : V ( II ) = 0
172 NEXT II
175 PRINT "." ; : V ( 100 ) = 0
182 INDX ( 1 ) = - 1 : INDX ( 2 ) = - 1
190 REM read in possible movement direction array
192 FOR Z2 = 1 TO 100
193 INPUT # 4 , DX1 , DX2 , DX3 , DX4 , DX5 , DX6 , DX7 , DX8 , DX9 , DX0
194 DIRS ( Z2 , 1 ) = DX1 : DIRS ( Z2 , 2 ) = DX2 : DIRS ( Z2 , 3 ) = DX3 : DIRS ( Z2 , 4 ) = DX4 : DIRS ( Z2 , 5 ) = DX5
195 DIRS ( Z2 , 6 ) = DX6 : DIRS ( Z2 , 7 ) = DX7 : DIRS ( Z2 , 8 ) = DX8 : DIRS ( Z2 , 9 ) = DX9 : DIRS ( Z2 , 10 ) = DX0
196 PRINT "." ;
197 NEXT Z2
198 CLOSE # 4
200 RESTORE 230
210 REM read in locations of items
220 FOR Z2 = 1 TO T2 STEP 5
221 READ DX1 , DX2 , DX3 , DX4 , DX5 : S ( Z2 ) = DX1 : S ( Z2 + 1 ) = DX2 : S ( Z2 + 2 ) = DX3 : S ( Z2 + 3 ) = DX4 : S ( Z2 + 4 ) = DX5
222 PRINT "." ;
228 NEXT Z2
230 DATA 18 , 25 , 23 , 24 , 21
231 DATA 52 , 0 , 71 , 74 , 58
232 DATA 59 , 69 , 66 , 82 , 100
233 DATA 7 , 49 , 7 , 7 , 7
234 DATA 7 , 12 , 13 , 40 , 38
235 DATA 69 , 0 , 46 , 0 , 0
236 DATA 15 , 60 , 82 , 22 , 250
240 FOR II = 1 TO 15 STEP 5 
241 READ DX1 , DX2 , DX3 , DX4 , DX5 : O ( II ) = DX1 : O ( II + 1 ) = DX2 : O ( II + 2 ) = DX3 : O ( II + 3 ) = DX4 : O ( II + 4 ) = DX5
242 PRINT "." ;
243 NEXT II
245 DATA 1 , 2 , 2 , 2 , 2
246 DATA 3 , 4 , 3 , 3 , 2
247 DATA 5 , 3 , 2 , 3 , 3
260 REM ASK IF HE WANTS DIRECTIONS
263 Z59 = 301 : GOSUB 7620
264 GOSUB 9860
266 IF Z0 THEN 267 ELSE 320
267 Z59 = 302 : GOSUB 7620
280 REM command input routine
300 REM print room, items
310 REM If it's dark don't let him see anything
320 IF L1 < 13 OR L1 = 58 THEN 350
321 IF L = 1 AND ( S ( 18 ) = L1 OR S ( 18 ) = - 1 ) THEN 350
330 Z59 = 45 : GOSUB 7620
340 GOTO 400
350 ON D0 + 1 GOSUB 6780 , 7990 , 8180
360 V ( L1 ) = 1
370 GOSUB 6680
375 IF DEAD = 1 THEN 9540
380 GOSUB 7800
390 REM INPUT LOOP --- MULTIPLE COMMAANDS, REMOVE JUNK CHARACTERS
400 REM if len(c$) > 0 then 500
410 INPUT ">" , C$ : C$ = UPPER$ ( C$ )
420 IF C$ = "" THEN 410
425 PRINT : PRINT : NKEY = 0
431 IF C$ <> LASTC$ THEN 433
432 C$ = "" : GOTO 900
433 NUMKEYS = 1 : LASTC$ = C$ : A$ = ""
449 REM 65-90 = A-Z               48-57 = 0-9         46 = .    
450 FOR X = 1 TO LEN ( C$ )
460 Z5 = ASC ( MID$ ( C$ , X , 1 ) )
470 IF ( Z5 > 64 AND Z5 < 91 ) OR ( Z5 > 47 AND Z5 < 58 ) OR Z5 = 46 THEN 480 ELSE 471
471 C$ = MID$ ( C$ , 1 , X - 1 ) + " " + MID$ ( C$ , X + 1 )
480 NEXT X
490 IF INSTR ( C$ , " " ) = 0 THEN 520
500 NUMKEYS = 2 : A$ = MID$ ( C$ , INSTR ( C$ , " " ) , LEN ( C$ ) - INSTR ( C$ , " " ) + 1 ) + " "
510 C$ = MID$ ( C$ , 1 , INSTR ( C$ , " " ) - 1 )
520 C$ = " " + C$ + " "
800 K ( 1 ) = 0 : K ( 2 ) = 0 : Z3 = 0
870 A1 = INSTR ( STRING$ , C$ ) : IF A1 = 0 THEN 872
871 C$ = MID$ ( STRING$ , A1 - 3 , 3 ) : K ( 1 ) = INT ( VAL ( C$ ) )
872 IF NUMKEYS = 1 THEN 900
873 A1 = INSTR ( STRING$ , A$ ) : IF A1 = 0 THEN 900
874 B$ = MID$ ( STRING$ , A1 - 3 , 3 ) : K ( 2 ) = INT ( VAL ( B$ ) )
890 REM EXOTIC WORDS
900 Z0 = 36
910 IF K ( 1 ) >= Z0 AND K ( 1 ) <= 46 THEN 930
920 IF K ( 2 ) >= Z0 AND K ( 2 ) <= 46 THEN 930 ELSE 980
930 GOSUB 8390
940 PRINT "What do you want to do with the " ; D$ ; "?"
950 GOTO 410
980 IF K ( 1 ) >= 110 AND K ( 1 ) <= T3 THEN 1950
990 IF K ( 2 ) >= 110 AND K ( 2 ) <= T3 THEN 1950
1000 REM THEN IS IT A DIRECTION
1010 FOR D = 1 TO 10
1020 IF K ( 1 ) = D + 99 OR K ( 2 ) = D + 99 THEN 1070
1030 NEXT D
1040 REM COMMAND NOT A DIRECTION
1050 GOTO 1950
1060 REM CAN HE MOVE THAT WAY?
1070 Z2 = DIRS ( L1 , D )
1130 IF Z2 = 255 THEN 1470
1140 IF Z2 < 1 OR Z2 > 254 THEN 1220
1150 REM NORMAL MOVING
1160 REM CHECK FOR SPECIAL MOVE CONDITIONS
1170 GOTO 1260
1180 L2 = L1 : L1 = Z2
1190 IF S ( 35 ) = L2 THEN 1191 ELSE 1200
1191 S ( 35 ) = L1
1200 GOTO 9780
1220 Z59 = 1
1221 GOSUB 7620
1230 GOTO 400
1240 REM SPECIAL ROOM DIRECTIONS
1250 REM GRATE
1260 IF L1 = 10 AND ( D = 10 OR D = 5 ) THEN 1280
1261 IF L1 = 11 AND ( D = 9 OR D = 3 ) THEN 1280 ELSE 1320
1270 REM IF GRATE IS OPEN (G=0) MOVE HIM
1280 IF G = 1 THEN 1180
1290 Z59 = 10 : GOSUB 7620
1300 GOTO 400
1310 REM CAN'T TAKE NUGGET UPPSTAIRS
1320 IF NOT ( L1 = 17 AND D = 9 AND S ( 1 ) = - 1 ) THEN 1360
1330 Z59 = 38 : GOSUB 7620
1340 GOTO 400
1350 REM CRYSTAL BRIDGE AND FISSURE
1360 IF NOT ( L1 = 19 AND D = 7 OR L1 = 20 AND D = 3 ) THEN 1410
1370 IF B2 THEN 1180
1380 Z59 = 3 : GOSUB 7620
1390 GOTO 400
1400 REM MT. KING & SNAKE
1410 IF NOT ( L1 = 22 AND D <> 3 AND D <> 9 ) THEN 1690
1420 IF SN = 0 THEN 1180
1430 Z59 = 50 : GOSUB 7620
1440 GOTO 400
1460 REM bedquilt and random directiosn
1470 IF L1 <> 44 THEN 1590
1480 IF RND > 0.5 THEN 1510
1490 Z59 = 52 : GOSUB 7620
1500 GOTO 400
1510 RESTORE 1530
1520 REM ROOMS TO JU
1530 DATA 33 , 37 , 45 , 92 , 76
1540 FOR Z3 = 1 TO INT ( RND * 5 ) + 1
1550 READ Z2
1560 NEXT Z3
1570 GOTO 1180
1580 REM WITT's END
1590 IF L1 <> 39 THEN 1220
1600 REM SHOULD WE LET HIM OUT?
1610 IF RND < 0.15 THEN 1650
1620 REM NO
1630 Z59 = 52 : GOSUB 7620
1640 GOTO 400
1650 REM YES
1660 Z2 = 38
1670 GOTO 1180
1680 REM Narrow Tunnel
1690 IF NOT ( L1 = 57 OR L1 = 58 ) THEN 1780
1691 IF K ( 1 ) <> 102 AND K ( 2 ) <> 102 AND K ( 1 ) <> 106 AND K ( 2 ) <> 106 THEN 1780
1700 FOR Z3 = 1 TO T2
1710 IF Z3 = 10 THEN 1750
1720 IF S ( Z3 ) <> - 1 THEN 1750
1730 Z59 = 53 : GOSUB 7620
1740 GOTO 400
1750 NEXT Z3
1760 GOTO 1180
1770 REM TROLL
1780 IF L1 = 60 AND D = 2 THEN 1790
1781 IF L1 = 61 AND D = 6 THEN 1790 ELSE 1860
1790 ON T + 1 GOTO 1180 , 1800 , 1820 , 1840
1800 Z59 = 55 : GOSUB 7620
1810 GOTO 400
1820 Z59 = 56 : GOSUB 7620
1821 Z59 = 55 : GOSUB 7620
1830 T = 1 : GOTO 400
1840 T = 2
1850 GOTO 1180
1860 IF NOT ( L1 = 73 AND D = 1 AND D2 = 0 ) THEN 1890
1870 Z59 = 57 : GOSUB 7620
1880 GOTO 400
1890 IF NOT ( L1 = 82 AND S ( 33 ) = L1 AND D = 1 ) THEN 1180
1900 REM DRAGON
1910 Z59 = 51 : GOSUB 7620
1920 GOTO 400
1940 REM OTHER COMMANDS
1950 Z1 = K ( 1 ) : IF K ( 1 ) >= 110 AND K ( 1 ) <= T3 THEN 2090
1960 Z1 = K ( 2 ) : IF K ( 2 ) >= 110 AND K ( 2 ) <= T3 THEN 2090
1980 REM ITEM BO NO VERB?
1990 IF K ( 1 ) >= 1 AND K ( 1 ) <= 35 THEN 2000
1991 IF K ( 2 ) >= 1 AND K ( 2 ) <= 35 THEN 2000 ELSE 2040
2000 FOR X = 1 TO 35
2020 IF K ( 1 ) <> X AND K ( 2 ) <> X THEN 2030
2021 RESTORE 9960 + X
2022 READ D$
2023 GOTO 940
2030 NEXT X
2040 RESTORE 2070
2050 FOR X = 1 TO INT ( RND * 4 ) + 1
2051 READ B$
2052 NEXT X
2060 PRINT B$
2070 DATA "What?" , "I don't understand." , "I can't understand that." , "I don't know that word."
2080 GOTO 400
2090 Z1 = Z1 - 109
2095 ON Z1 GOTO 2120 , 2220 , 2300 , 2390 , 2570 , 2640 , 2680 , 2860 , 2930 , 3000 , 3080 , 3130 , 3290 , 3450 , 3590 , 3920 , 4160 , 4430 , 4630 , 4800 , 4950 , 5060 , 5190 , 5410 , 5560 , 5750 , 5810 , 5920 , 6000 , 6090 , 6230 , 6270 , 6310 , 6350 , 6410 , 8970 , 9080 , 9220 , 4490 , 9330
2110 GOTO 2040
2120 REM *** PLUGH ***
2130 IF L1 <> 7 THEN 2170
2140 IF S ( 35 ) = L1 THEN S ( 35 ) = 0
2150 Z2 = 26
2160 GOTO 1180
2170 IF L1 <> 26 THEN 2200
2180 Z2 = 7
2190 GOTO 1180
2200 Z59 = 2 : GOSUB 7620
2210 GOTO 400
2220 REM *** XYZZY ***
2230 IF L1 <> 7 THEN 2270
2240 IF S ( 35 ) = L1 THEN S ( 35 ) = 0
2250 Z2 = 13
2260 GOTO 1180
2270 IF L1 <> 13 THEN 2200
2280 Z2 = 7
2290 GOTO 1180
2300 REM *** PLOVER *** (CAN'T BRING EMERALD WITH HIM)
2310 IF L1 > 26 THEN 2360
2320 IF S ( 35 ) <> L1 THEN 2330
2325 S ( 35 ) = 0
2330 IF S ( 10 ) <> - 1 THEN 2340
2335 S ( 10 ) = L1
2340 Z2 = 58
2350 GOTO 1180
2360 IF L1 <> 58 THEN 2200
2370 Z2 = 26
2380 GOTO 1180
2390 REM *** CROSS ***
2400 IF L1 <> 19 THEN 2470
2410 IF B2 <> 0 THEN 2440
2420 Z59 = 3 : GOSUB 7620
2430 GOTO 400
2440 D = 7
2450 REM JUST GIVE NEW DIRECTION, USE MOVE ROUTINE
2460 GOTO 1070
2470 IF L1 <> 20 THEN 2510
2480 IF B2 = 0 THEN 2420
2490 D = 3
2500 GOTO 1070
2510 IF L1 <> 60 THEN 2540
2520 D = 2
2530 GOTO 1070
2540 IF L1 <> 61 THEN 2200
2550 D = 6
2560 GOTO 1070
2570 REM *** CLIMB ***
2580 IF L1 <> 50 THEN 2200
2590 REM CAN HE CLIMB BEANSTALK?
2600 IF P1 < 2 THEN 2200
2610 REM YES
2620 Z2 = 70
2630 GOTO 1180
2640 REM *** JUMP *** STRICTLY SUICIDAL
2650 IF L1 <> 16 AND L1 <> 19 AND L1 <> 20 AND L1 <> 27 THEN 2200
2660 Z59 = 4 : GOSUB 7620
2670 GOTO 9550
2680 REM FILL
2690 IF S ( 21 ) = - 1 THEN 2730
2700 B$ = "bottle"
2710 PRINT "You don't have the " ; B$
2720 GOTO 410
2730 IF B0 = 0 THEN 2760
2740 Z59 = 5 : GOSUB 7620
2750 GOTO 410
2760 IF L1 <> 7 AND L1 <> 8 AND L1 <> 9 AND L1 <> 35 AND L1 <> 74 AND L1 <> 81 THEN 2790
2770 B0 = 1 : S ( 16 ) = - 1
2780 GOTO 2840
2790 IF L1 = 49 THEN 2830
2800 B$ = "oil"
2810 PRINT "I see no " ; B$ ; " here."
2820 GOTO 400
2830 B0 = 2 : S ( 17 ) = - 1
2840 PRINT "The bottle is now filled."
2850 GOTO 400
2860 REM *** EMPTY ***
2870 IF S ( 21 ) = - 1 THEN 2890
2880 GOTO 2700
2890 REM EMPTY BOTTLE (ASSUMED FULL)
2900 S ( B0 + 15 ) = 0 : B0 = 0
2910 PRINT "Emptied"
2920 GOTO 400
2930 REM *** LOOK ***
2940 IF L1 < 13 OR L1 = 58 THEN 2970
2941 IF L = 1 AND ( S ( 18 ) = L1 OR S ( 18 ) = - 1 ) THEN 2970
2950 Z59 = 45 : GOSUB 7620
2960 GOTO 400
2970 GOSUB 8050
2980 GOSUB 6680
2990 GOTO 400
3000 REM *** LIGHT ***
3010 IF S ( 18 ) = - 1 THEN 3040
3020 B$ = "lamp"
3030 GOTO 2710
3040 L = 1
3050 B$ = "on"
3060 PRINT "The lamp is now " ; B$
3070 GOTO 2940
3080 REM *** OFF (EXTINGUSIH) ***
3090 IF S ( 18 ) = - 1 THEN 3110
3100 GOTO 3020
3110 L = 0 : B$ = "off"
3120 GOTO 3060
3130 REM *** ENTER ***
3140 IF L1 <> 6 THEN 3180
3150 REM TO HOUSE
3160 D = 3
3170 GOTO 1070
3180 IF L1 <> 68 THEN 3240
3190 REM TO BARREN ROOM
3200 D = 3
3210 GOTO 1070
3240 FOR Z0 = 1 TO 10
3250 Z2 = DIRS ( L1 , Z0 )
3260 IF Z2 > 0 AND Z2 < 101 THEN 1150
3270 NEXT Z0
3280 GOTO 2200
3290 REM ** LEAVE ***
3300 IF L1 <> 7 THEN 3340
3310 REM LEAVE HOUSE
3320 D = 7
3330 GOTO 1070
3340 IF L1 <> 69 THEN 3400
3350 REM LEAVE BARREN ROOM
3360 D = 7
3370 GOTO 1070
3400 FOR Z0 = 1 TO 10
3410 Z2 = DIRS ( L1 , Z0 )
3420 IF Z2 > 0 AND Z2 < 101 THEN 1150
3430 NEXT Z0
3440 GOTO 2200
3450 REM *** INVENTORY ***
3470 Z0 = 0
3480 PRINT "You are carrying:" ;
3490 FOR X = 1 TO T2
3510 IF S ( X ) <> - 1 THEN 3540
3511 RESTORE 9960 + X : READ B$
3520 PRINT B$
3530 Z0 = Z0 + 1
3540 NEXT X
3550 IF Z0 = 0 THEN 3551 ELSE 3560
3551 PRINT "nothing."
3560 PRINT
3570 GOTO 400
3590 REM *** GET ***
3630 IF K ( 1 ) = 47 OR K ( 2 ) = 47 THEN 3680
3640 GOSUB 8280
3650 IF Z8 > 0 THEN 3680
3660 PRINT "Get what?"
3670 GOTO 2040
3680 FOR Z3 = 1 TO T2
3710 IF K ( 1 ) = 47 OR K ( 2 ) = 47 THEN 3730
3720 IF K ( 1 ) <> Z3 AND K ( 2 ) <> Z3 THEN 3900
3730 IF S ( Z3 ) <> L1 THEN 3750
3740 IF S ( Z3 ) = L1 THEN 3790
3750 IF K ( 1 ) = 47 OR K ( 2 ) = 47 THEN 3900
3760 RESTORE 9960 + Z3 : READ A$ : PRINT A$ ; " not here."
3770 GOTO 3900
3780 REM MUST CHECK NOW FOR LEGALITY OF TAKING ITEM
3790 Z8 = 0
3800 FOR X = 1 TO T2
3810 IF S ( X ) <> - 1 THEN 3820
3811 Z8 = Z8 + 1
3820 NEXT X
3830 IF Z8 < 7 THEN 3870
3840 REM CARRYING TOO MUCH
3850 Z59 = 54 : GOSUB 7620
3860 GOTO 410
3870 GOTO 6880
3880 S ( Z3 ) = - 1
3890 RESTORE 9960 + Z3 : READ A$ : PRINT A$ ; ":taken."
3900 NEXT Z3
3910 GOTO 400
3920 REM *** DROP ***
3940 IF K ( 1 ) = 47 OR K ( 2 ) = 47 THEN 4000
3950 GOSUB 8280
3960 IF Z8 > 0 THEN 4000
3970 PRINT "Drop what?"
3980 GOTO 2040
4000 FOR Z3 = 1 TO T2
4030 IF K ( 1 ) = 47 OR K ( 2 ) = 47 THEN 4060
4040 IF K ( 1 ) <> Z3 AND K ( 2 ) <> Z3 THEN 4140
4050 IF S ( Z3 ) = 0 THEN 4140
4060 IF S ( Z3 ) = - 1 THEN 4100
4070 IF K ( 1 ) = 47 OR K ( 2 ) = 47 THEN 4140
4080 RESTORE 9960 + Z3 : READ B$ : PRINT "You don't have the " ; B$
4090 GOTO 4140
4100 REM STILL NEED TO ELABORATE ON DROP (BIRD IN CAGE, BOTTLE)
4110 GOTO 7380
4120 RESTORE 9960 + Z3 : READ B$ : PRINT B$ ; ":dropped."
4130 S ( Z3 ) = L1
4140 NEXT Z3
4150 GOTO 400
4160 REM *** THROW ***
4170 GOSUB 8280
4180 IF Z8 > 0 THEN 4210
4190 PRINT "Throw what?"
4200 GOTO 2040
4210 IF S ( Z3 ) <> - 1 THEN 2710
4220 IF NOT ( Z3 < 16 AND S ( 32 ) = L1 ) THEN 4260
4230 REM THROW TREASURE TO TROLL
4240 Z59 = 27 : GOSUB 7620
4241 S ( Z3 ) = 0 : T = 3 : GOTO 400
4260 IF NOT ( Z3 = 27 AND S ( 32 ) = L1 ) THEN 4300
4270 REM TRYING TO BUTCHER TROLL?
4280 Z59 = 26 : GOSUB 7620
4281 S ( 27 ) = L1 : GOTO 400
4300 IF NOT ( Z3 = 27 AND S ( 35 ) = L1 ) THEN 4380
4310 REM TRYING TO KILL DWARF
4320 IF RND > 0.5 THEN 4360
4330 Z59 = 29 : GOSUB 7620
4340 GOSUB 8650
4350 GOTO 4410
4360 Z59 = 30 : GOSUB 7620
4361 S ( 35 ) = 0 : GOTO 4410
4380 REM NOTHING SPECIAL, JUST DROP ITEM
4390 IF S ( 35 ) <> L1 THEN 4400
4391 GOSUB 8550
4400 PRINT "Thrown."
4410 S ( Z3 ) = L1
4415 IF DEAD = 1 THEN 9540
4420 GOTO 400
4430 REM *** ATTACK ***
4440 GOSUB 8280
4450 IF NOT ( Z3 = 33 AND S ( Z3 ) = L1 AND L1 = 82 ) THEN 4520
4460 REM HE CAN KILL DRAGON
4470 Z59 = 68 : GOSUB 7620
4480 GOTO 410
4490 IF L1 <> 82 THEN 2040
4500 Z59 = 69 : GOSUB 7620
4501 S ( 33 ) = 0 : D1 = 0 : GOTO 400
4520 IF S ( 32 ) <> L1 THEN 4560
4530 REM TRYING TO MUNGE TROLL
4540 Z9 = FNA ( 25 ) : GOTO 400
4560 IF NOT ( Z3 = 26 OR Z3 > 30 ) THEN 4600
4570 REM DANGEROUS TO ATTACK THESE
4580 Z59 = 70 : GOSUB 7620
4590 GOTO 400
4600 REM NOTHING TO ATTACK
4610 Z59 = 71 : GOSUB 7620
4620 GOTO 400
4630 REM *** FEED ***
4640 GOSUB 8280
4650 IF Z3 <> 35 THEN 4690
4660 REM CAN'T FEED DWARF!
4670 Z59 = 24 : GOSUB 7620
4680 GOTO 400
4690 IF S ( 20 ) = - 1 THEN 4720
4700 B$ = "FOOD" : GOTO 2710
4720 IF L1 = 69 THEN 4760
4730 PRINT "I can't feed it."
4740 Z59 = 23 : GOSUB 7620
4750 GOTO 400
4760 IF S ( 20 ) = L1 THEN 7600
4770 B1 = 1 : S ( 20 ) = 0 : Z59 = 6 : GOSUB 7620
4790 GOTO 400
4800 REM *** WATER ***
4810 IF S ( 16 ) = - 1 THEN 4840
4820 B$ = "water" : GOTO 2710
4840 IF L1 <> 50 THEN 2200
4850 REM GOTO P1+1 OF 4860,4890,4920
4851 IF P1 = 0 THEN 4860
4852 IF P1 = 1 THEN 4890
4853 IF P1 = 2 THEN 4920
4860 Z59 = 7 : GOSUB 7620
4870 P1 = 1 : S ( 16 ) = 0 : B0 = 0 : GOTO 400
4890 Z59 = 8 : GOSUB 7620
4900 P1 = 2 : S ( 16 ) = 0 : B0 = 0 : GOTO 400
4920 Z59 = 9 : GOSUB 7620
4930 P1 = 0 : S ( 16 ) = 0 : B0 = 0 : GOTO 400
4950 REM *** LOCK ***
4960 IF L1 = 10 OR L1 = 11 THEN 4990
4970 REM NOTHING LOCKABLE
4980 GOTO 2200
4990 IF S ( 19 ) = - 1 THEN 5020
5000 B$ = "keys" : GOTO 2710
5020 G = 0 : Z59 = 10 : GOSUB 7620
5040 GOTO 400
5060 REM *** UNLOCK ***
5070 IF S ( 19 ) <> - 1 THEN 5000
5080 IF L1 <> 10 AND L1 <> 11 THEN 5120
5090 G = 1 : Z59 = 11 : GOSUB 7620
5110 GOTO 400
5120 IF L1 <> 69 THEN 2200
5130 IF B1 > 0 THEN 5160
5140 Z59 = 12 : GOSUB 7620
5150 GOTO 400
5160 IF C <> 0 THEN 5170
5165 C = 1 : B1 = 2
5170 Z59 = 13 : GOSUB 7620
5180 GOTO 400
5190 REM *** FREE ***
5200 IF K ( 1 ) = 31 OR K ( 2 ) = 31 THEN 5240
5210 REM CAN'T FREE ANYTHING BUT BIRD
5220 Z59 = 2 : GOSUB 7620
5230 GOTO 410
5240 IF S ( 31 ) <> - 1 THEN 5220
5250 S ( 31 ) = L1 : B3 = 0
5260 PRINT "Freed."
5270 IF L1 <> 22 THEN 5350
5280 IF SN <> 1 THEN 400
5290 B$ = "snake"
5300 PRINT "The little bird attacks the green " ; B$ ; " and"
5310 IF L1 = 82 THEN 5380
5320 PRINT "drives it off"
5330 SN = 0 : S ( 34 ) = 0 : GOTO 400
5350 IF L1 <> 82 THEN 400
5360 B$ = "dragon" : GOTO 5300
5380 PRINT "gets burned to a crisp"
5381 S ( 20 ) = 0 : B0 = 0 : GOTO 400
5390 S ( 31 ) = 0
5400 GOTO 400
5410 REM *** WAVE ***
5420 IF K ( 1 ) <> 23 AND K ( 2 ) <> 23 THEN 2200
5430 IF S ( 23 ) = - 1 THEN 5460
5440 B$ = "rod" : GOTO 2710
5460 REM IS HERE NEAR FISSURE
5470 IF L1 <> 19 AND L1 <> 20 THEN 2200
5480 REM yes
5490 REM GOTO B2+1 OF 5500,5530
5491 IF B2 = 0 THEN 5500
5492 IF B2 = 1 THEN 5530
5500 Z59 = 14 : GOSUB 7620
5510 B2 = 1 : GOTO 400
5530 Z59 = 15 : GOSUB 7620
5540 B2 = 0 : GOTO 400
5560 REM *** OPEN ***
5570 GOSUB 8280
5580 IF Z3 > 0 THEN 5610
5590 PRINT "Open " ; : GOTO 2040
5610 IF Z3 = 40 THEN 5070
5620 IF S ( Z3 ) = L1 THEN 5650
5630 PRINT "I see no " ; B$ ; " here." : GOTO 400
5650 IF Z3 = 24 THEN 5680
5660 PRINT "I don't know how to open a " ; B$ : GOTO 400
5680 IF S ( 9 ) = - 1 THEN 5710
5690 Z59 = 16 : GOSUB 7620
5700 GOTO 400
5710 IF S ( Z3 ) = 0 THEN 2200
5720 REM HE'S OPENED CLAM, SO PRINT DESCRIPTION OF THIS
5730 REM PUT PEARL IN CUL-DE-SAC
5740 S ( 7 ) = 43 : S ( 24 ) = 0 : S ( 30 ) = L1 : Z59 = 17 : GOSUB 7620
5750 GOTO 400
5760 REM *** CLOSE ***
5770 GOSUB 8280
5780 IF Z3 = 40 THEN 4960
5790 Z59 = 18 : GOSUB 7620
5800 GOTO 400
5810 REM OIL
5820 IF K ( 1 ) <> 17 AND K ( 2 ) <> 17 THEN 2200
5830 IF S ( 17 ) = - 1 THEN 5860
5840 B$ = "oil" : GOTO 5630
5860 IF L1 <> 73 THEN 2200
5870 REM IS DOOR STILL RUSTED
5880 IF D2 = 1 THEN 2200
5890 D2 = 1 : S ( 17 ) = 0 : B0 = 0 : Z59 = 19 : GOSUB 7620
5900 GOTO 400
5910 REM *** EAT ***
5920 IF K ( 1 ) = 20 OR K ( 2 ) = 20 THEN 5950
5930 Z59 = 20 : GOSUB 7620
5940 GOTO 410
5950 Z3 = 20 : GOSUB 8490
5970 IF Z5 = 0 THEN 410
5980 Z59 = 73 : GOSUB 7620
6000 REM *** DRINK ***
6010 IF K ( 1 ) = 16 OR K ( 2 ) = 16 THEN 6040
6020 Z59 = 21 : GOSUB 7620
6030 GOTO 410
6040 Z3 = 16 : GOSUB 8490
6060 IF Z5 = 0 THEN 410
6070 Z59 = 22 : GOSUB 7620
6071 S ( 17 ) = 0 : B0 = 0 : GOTO 400
6090 REM *** FEE FIE FOE FOO ***
6100 IF L1 = 71 THEN 6130
6110 Z59 = 2 : GOSUB 7620
6120 GOTO 410
6130 IF S ( 8 ) <> L1 THEN 6180
6140 REM MAKE NEST VANISH
6150 Z59 = 79 : GOSUB 7620
6160 S ( 8 ) = 0 : GOTO 400
6180 REM IF S(8)=0 THEN 6110
6190 S ( 8 ) = L1
6200 REM MAKE NEST RE-APPEAR
6210 Z59 = 81 : GOSUB 7620
6220 GOTO 400
6230 REM *** SHORT ***
6240 PRINT "Short descriptions"
6250 D0 = 0 : GOTO 400
6270 REM *** LONG ***
6280 PRINT "Long descriptions"
6290 D0 = 1 : GOTO 400
6310 REM *** BRIEF ***
6320 PRINT "OK, I'll only describe the room in detail the first time."
6330 D0 = 2 : GOTO 400
6350 REM *** QUIT ***
6360 PRINT "Save game" ;
6370 GOSUB 9860
6380 IF Z0 = 1 THEN 8970
6390 GOTO 9750
6400 REM SCORE ***
6410 GOSUB 6430
6420 GOTO 400
6430 REM PRINT OUT SCORE DATA
6440 GOSUB 6510
6450 PRINT "Your score is now " ; S0
6451 PRINT "You have explored " , ( Z9 / T1 ) * T1 , "% of the cave."
6460 RESTORE 6470
6470 DATA "beginner" , "novice" , "experienced" , "advanced" , "expert"
6480 Z9 = INT ( ( S0 - 1 ) / 100 )
6481 IF Z9 <= 4 THEN 6483
6482 Z9 = 4
6483 FOR Z0 = 0 TO Z9
6484 READ D$
6485 NEXT Z0
6490 PRINT "That makes you a " ; D$ ; " adventurer."
6500 RETURN
6510 REM COMPUTE CURRENT SCORE
6520 RESTORE 230
6530 Z9 = 0 : S0 = 0
6540 FOR Z0 = 1 TO 15
6550 READ Z1
6560 IF Z1 = 0 THEN 6590
6570 IF V ( Z1 ) <> 1 THEN 6580
6575 S0 = S0 + 4 * O ( Z0 )
6580 IF S ( Z0 ) <> 7 THEN 6590
6585 S0 = S0 + 4 * O ( Z0 )
6590 NEXT Z0
6600 S0 = ( G = 1 ) * 10 + S0 : S0 = ( SN = 0 ) * 20 + S0 : S0 = ( D1 = 0 ) * 30 + S0 : S0 = ( T = 0 ) * 30 + S0 : S0 = ( B1 = 2 ) * 20 + S0
6605 S0 = ( B2 = 1 ) * 20 + S0 : S0 = ( P1 = 2 ) * 20 + S0 : S0 = ( D2 = 1 ) * 20 + S0 : S0 = ( C = 1 ) * 20 + S0
6610 FOR Z0 = 1 TO T1
6620 IF V ( Z0 ) <> 1 THEN 6630
6621 S0 = S0 + 1 : Z9 = Z9 + 1
6630 NEXT Z0
6640 RETURN
6660 REM list items at location l1
6680 FSEEK # 2 , 0
6690 FOR Z1 = 1 TO T2
6700 INPUT # 2 , A$
6710 IF S ( Z1 ) <> L1 THEN 6720
6711 PRINT A$
6720 NEXT Z1
6721 IF S ( 26 ) <> - 1 THEN 6730
6722 Z59 = 67 : GOSUB 7620
6730 REM CHECK FOR DWARF,PIRATE
6740 GOSUB 8560
6745 IF DEAD = 1 THEN 6770
6750 GOSUB 8800
6760 PRINT
6770 RETURN
6775 REM Print Short room description
6780 FSEEK # 1 , 0
6820 FOR Z1 = 1 TO L1
6830 INPUT # 1 , A$
6840 NEXT Z1
6850 V ( L1 ) = 1
6860 PRINT A$
6870 RETURN
6880 REM SPECIAL GETS
6890 IF NOT ( Z3 = 24 OR Z3 = 30 OR Z3 > 31 ) THEN 6930
6900 REM CAN'T GET THESE FOR SOME REASON
6910 Z59 = 61 : GOSUB 7620
6920 GOTO 400
6930 IF NOT ( Z3 = 12 AND C = 0 ) THEN 6970
6940 REM CHAIN
6950 Z59 = 58 : GOSUB 7620
6960 GOTO 3900
6970 REM BEAR IS HE FED? UNLOCKED?
6980 IF NOT ( Z3 = 26 AND B1 <> 2 ) THEN 7010
6990 Z59 = 61 : GOSUB 7620
7000 GOTO 3900
7010 IF NOT ( Z3 = 14 AND D1 = 1 ) THEN 7050
7020 REM DRAGON AND RUG
7030 Z59 = 59 : GOSUB 7620
7040 GOTO 3900
7050 IF NOT ( Z3 = 16 OR Z3 = 17 ) THEN 7090
7060 REM OIL AND WATER DO SAME AS FILL
7070 PRINT "Why not say 'fill'?"
7080 GOTO 3900
7090 IF NOT ( Z3 = 22 AND B3 ) THEN 7140
7100 REM TAKE BIRD SINCE IT'S IN CAGE
7110 S ( 31 ) = - 1 : PRINT "Bird and " ; : GOTO 3880
7140 IF Z3 <> 31 THEN 7310
7150 REM GETTING BIRD
7160 IF B3 <> 1 THEN 7210
7170 REM TAKE CAGE, SINCE BIRD IS IN IT
7180 PRINT "Cage and " ; : S ( 22 ) = - 1 : GOTO 3880
7210 IF S ( 22 ) = - 1 THEN 7240
7220 B$ = "cage" : GOTO 2810
7240 IF S ( 23 ) = - 1 THEN 7280
7250 REM OK TO TAKE BIRD
7260 S ( 31 ) = - 1 : B3 = 1 : GOTO 3890
7280 REM ROD SCARES BIRD
7290 Z59 = 37 : GOSUB 7620
7300 GOTO 3900
7310 REM BOTTLE FULL? IF SO, GET CONTENTS
7320 IF NOT ( Z3 = 21 AND B0 ) THEN 7360
7330 PRINT "Contents and the " ;
7340 S ( B0 + 15 ) = - 1
7360 GOTO 3880
7370 REM SPECIAL "DROP"
7380 IF Z3 <> 31 THEN 7440
7390 REM BIRD IN CAGE
7400 S ( 31 ) = L1 : S ( 22 ) = L1 : B3 = 1
7410 IF Z3 <> 31 THEN 7420
7415 PRINT "Cage and " ;
7420 IF Z3 = 22 THEN 7430
7425 PRINT "Bird and " ;
7430 GOTO 4120
7440 IF Z3 = 22 AND B3 = 1 THEN 7400
7450 IF Z3 <> 21 THEN 7520
7460 REM BOTTLE
7470 IF B0 = 0 THEN 4120
7480 REM BOTTLE IS FULL, DO DROP CONTENTS TOO
7490 PRINT "Contents and " ;
7500 S ( 15 + B0 ) = L1 : GOTO 4120
7520 IF NOT ( Z3 = 16 OR Z3 = 17 ) THEN 7541
7530 PRINT "Try saying 'empty'" : GOTO 4140
7541 IF Z3 <> 26 OR T <> 1 OR ( L1 <> 60 AND L1 <> 61 ) THEN 7550
7542 Z59 = 28 : GOSUB 7620
7543 T = 0 : S ( 26 ) = L1 : S ( 32 ) = 0 : GOTO 400
7550 IF Z3 <> 6 THEN 4120
7560 IF S ( 28 ) = L1 THEN 7600
7570 REM GOODBYE, FRAGILE VASE!
7580 Z59 = 43 : GOSUB 7620
7581 S ( 6 ) = 0 : S ( 29 ) = L1 : GOTO 400
7600 Z59 = 60 : GOSUB 7620
7610 GOTO 4120
7619 REM PRINT MESSAGE
7620 IF INDX ( 1 ) >= 0 THEN 7640
7630 GOSUB 12500
7640 Z59 = INT ( Z59 ) : XTMP = INDX ( Z59 )
7645 IF Z59 <> 2 AND Z59 <> 61 THEN 7660
7650 XTMP = FRAINDX ( XTMP + MIN ( INT ( RND * 5 ) , 5 ) )
7660 FSEEK # 3 , XTMP
7670 INPUT # 3 , B1$
7672 IF LEN ( B1$ ) = 0 THEN 7673 ELSE 7690
7673 B1$ = " "
7690 IF INSTR ( B1$ , "#" ) = 0 THEN 7670
7700 Z4 = VAL ( MID$ ( B1$ , 2 ) )
7705 IF INT ( Z4 ) = Z59 THEN 7720
7710 IF INT ( Z4 ) < Z59 THEN 7670
7712 IF INT ( Z4 ) > Z59 THEN 7760
7720 INPUT # 3 , B1$
7730 IF MID$ ( B1$ , 1 , 1 ) = "#" THEN 7770
7740 PRINT B1$
7750 GOTO 7720
7760 PRINT "NO DESC. # " ; Z59 ; " IN FILE AMESSAGE"
7770 RETURN
7800 REM
7810 REM SITUATION DESCRIPTIONS
7820 REM
7830 REM GRATE
7840 IF L1 = 10 OR L1 = 11 THEN 7842 ELSE 7860
7842 Z59 = ( G + 10 ) : GOSUB 7620
7850 REM CRYSTAL BRIDGE
7860 IF ( L1 = 19 OR L1 = 20 ) AND B2 = 1 THEN 7861 ELSE 7880
7861 Z59 = 14 : GOSUB 7620
7870 REM PLUGH NOISE
7880 IF L1 = 26 AND RND > 0.3 THEN 7881 ELSE 7900
7881 Z59 = 41 : GOSUB 7620
7890 REM IRON DOOR
7900 IF L1 = 73 AND D2 = 0 THEN 7901 ELSE 7920
7901 Z59 = 57 : GOSUB 7620
7910 REM TROLL
7920 IF ( L1 = 60 OR L1 = 61 ) AND T = 1 THEN 7921 ELSE 7940
7921 Z59 = 63 : GOSUB 7620
7930 REM BEAR
7940 IF L1 = 69 AND B1 = 0 THEN 7941 ELSE 7950
7941 Z59 = 64 : GOSUB 7620
7950 IF L1 = 69 AND B1 = 1 THEN 7951 ELSE 7970
7951 Z59 = 66 : GOSUB 7620
7960 REM PLANT IN PIT
7970 IF L1 = 48 OR L1 = 50 THEN 7971 ELSE 7980
7971 Z59 = 47 + P1 : GOSUB 7620
7980 RETURN
7990 REM
8000 REM print long room description from "amessage" file
8010 REM description is noormally l1+200 except for
8020 REM maze or forest
8030 REM set v(l1)=1 so as not to repeat long desc(brief mode
8040 V ( L1 ) = 1
8050 IF L1 > 4 THEN 8080
8060 Z59 = 200 : GOSUB 7620
8070 GOTO 8130
8080 IF NOT ( L1 > 88 AND L1 < 98 OR L1 = 99 ) THEN 8110
8090 Z59 = 288 : GOSUB 7620
8100 GOTO 8130
8110 REM normal description
8120 Z59 = 200 + L1 : GOSUB 7620
8130 RETURN
8180 REM always give long descriptio nfor forest and maze
8190 IF L1 < 5 OR ( L1 > 88 AND L1 < 98 ) OR L1 = 99 THEN 8220
8200 IF V ( L1 ) = 1 THEN 8201 ELSE 8220
8201 GOSUB 6780
8202 GOTO 8235
8210 REM he hassn't seen this room, so give a long desc.
8220 V ( L1 ) = 1
8230 GOSUB 7990
8235 RETURN
8240 REM
8250 REM fetch first item code in k(1 to t2)
8260 REM z8=total # of items found in list
8270 REM z3=item code first found
8280 Z8 = 0 : Z3 = 0 : D$ = ""
8300 FOR Z5 = 1 TO 45
8320 IF K ( 1 ) <> Z5 AND K ( 2 ) <> Z5 THEN 8360
8330 Z8 = Z8 + 1
8340 RESTORE 9960 + Z5 : READ B$ : D$ = B$
8350 IF K ( 1 ) = Z5 AND Z8 = 1 THEN 8352
8351 IF K ( 2 ) = Z5 AND Z8 = 1 THEN 8352 ELSE 8360
8352 Z3 = Z5
8360 NEXT Z5
8370 B$ = D$
8380 RETURN
8390 REM FIND FIRST ITEM AT ROOM
8400 X1 = 0
8410 FOR Z1 = 1 TO 47
8415 IF X1 = 1 THEN 8440
8430 IF K ( 1 ) = Z1 OR K ( 2 ) = Z1 THEN 8431 ELSE 8440
8431 RESTORE 9960 + Z1 : READ D$ : X1 = 1
8440 NEXT Z1
8450 RETURN
8460 REM 
8470 REM MAKE SURE HE'S CARRYING ITEM * Z3
8480 REM
8490 IF S ( Z3 ) = - 1 THEN 8530
8500 PRINT "You don't have the " ; A$
8510 Z5 = 0
8520 RETURN
8530 Z5 = 1
8540 RETURN
8550 REM *** DWARF ***
8560 IF D3 <> 0 THEN 8640
8570 REM SHOULD DWARF GIVE AWAY AXE?
8580 IF L1 < 13 THEN 8790
8590 IF RND > 0.05 THEN 8790
8600 REM GIVE AWAY AXE
8610 Z59 = 80 : GOSUB 7620
8620 S ( 27 ) = L1 : D3 = 1
8630 GOTO 8790
8640 REM SHOULD DWARF ATTACK?
8650 IF L1 >= 13 THEN 8660
8652 S ( 35 ) = 0 : GOTO 8790
8660 IF S ( 35 ) <> L1 THEN 8770
8670 IF RND > 0.5 THEN 8790
8680 REM YES!
8690 Z59 = 32 : GOSUB 7620
8700 REM DOES THE KNIFE KILL THE PLAYER?
8705 KC = KC - 0.02
8706 IF KC >= 0.5 THEN 8710
8707 KC = 0.5
8710 IF RND <= KC THEN 8750
8720 REM YES
8730 PRINT "It gets you!"
8740 DEAD = 1 : GOTO 8790
8750 PRINT "It misses!"
8760 GOTO 8790
8770 REM SHOULD WE PUT A DWARF HERE?
8780 IF RND >= 0.1 THEN 8790
8785 S ( 35 ) = L1
8786 Z59 = 31 : GOSUB 7620
8790 RETURN
8800 REM *** PIRATE ***
8810 REM FIRST, DOES HE HAVE ANYTHING WORTH STEALING?
8820 Z3 = 0
8830 IF L1 < 13 THEN 8960
8840 FOR X = 1 TO 15
8850 IF S ( X ) <> - 1 THEN 8860
8855 Z3 = Z3 + 1
8860 NEXT X
8870 IF Z3 < INT ( RND * 4 ) + 1 THEN 8960
8880 REM SHOULD WE RIP OFF HIS VALUABLES?
8890 IF RND < 0.05 THEN 8920
8900 Z59 = 34 : GOSUB 7620
8910 GOTO 8960
8920 Z59 = 33 : GOSUB 7620
8930 FOR X = 1 TO 15
8940 IF S ( X ) <> - 1 THEN 8950
8945 S ( X ) = 100
8950 NEXT X
8960 RETURN
8970 REM *** SAVE GAME ***
8980 INPUT "What do you want to call the save file? " , A$
8990 OPEN A$ FOR OUTPUT AS # 5 ELSE 9010
9000 GOTO 9030
9010 PRINT "File " , A$ , " not created"
9020 GOTO 410
9030 PRINT # 5 , T1 , "," , T2 , "," , T3 , "," , L1 , "," , L2 , "," , G , "," , B0 , "," , SN , "," , D1 , "," , D2 , "," , D0 , "," , T , "," , B1 , "," , B2 , "," , P1 , "," , L , "," , C , "," , D3 , "," , B3 , "," , R0 , "," , KC
9040 FOR X = 1 TO 99
9041 PRINT # 5 , S ( X ) , "," , V ( X )
9042 NEXT X
9043 PRINT # 5 , V ( 100 )
9044 CLOSE # 5
9050 PRINT "Game saved"
9051 C0 = 0
9060 IF K ( 1 ) = 143 OR K ( 2 ) = 143 THEN 9750
9070 GOTO 410
9080 REM *** LOAD OLD GAME ***
9090 IF C0 = 0 THEN 9120
9100 PRINT "You already have a loaded game!"
9110 GOTO 410
9120 INPUT "Save file name? " , A$
9130 OPEN A$ FOR INPUT AS # 5 ELSE 9150
9140 GOTO 9170
9150 PRINT "Unable to use file " ; A$
9160 GOTO 410
9170 INPUT # 5 , T1 , T2 , T3 , L1 , L2 , G , B0 , SN , D1 , D2 , D0 , T , B1 , B2 , P1 , L , C , D3 , B3 , R0 , KCX$
9171 KC = VAL ( KCX$ )
9180 FOR X = 1 TO 99
9191 INPUT # 5 , SX , VX : S ( X ) = SX : V ( X ) = VX
9192 NEXT X
9193 INPUT # 5 , VX : V ( 100 ) = VX
9194 CLOSE # 5
9200 C0 = 1
9210 GOTO 300
9220 REM *** READ THE MAGAZINE ***
9230 GOSUB 8280
9240 IF Z3 = 25 THEN 9270
9250 Z59 = 74 : GOSUB 7620
9260 GOTO 410
9270 IF S ( 25 ) = - 1 THEN 9300
9280 B$ = "magazine"
9290 GOTO 2710
9300 REM OK, LET HIM READ IT
9310 Z59 = 303 : GOSUB 7620
9320 GOTO 400
9330 REM *** BUG ***
9340 A$ = "ADVBUGS.TXT"
9341 OPEN A$ FOR APPEND AS # 5 ELSE 9150
9390 INPUT "Your name: " , A$
9400 A$ = A$ + " " + DATE$
9410 PRINT # 5 , A$
9420 PRINT "Enter your gripe in up to five lines (hit return to quit):"
9430 FOR Z0 = 1 TO 5
9440 PRINT Z0 ;
9450 INPUT A$
9460 IF A$ = "" THEN 9490
9470 PRINT # 5 , A$
9480 NEXT Z0
9490 PRINT "Message recorded. Thank you!"
9500 CLOSE # 5
9510 GOTO 410
9540 REM REINCARNATE HIM
9550 R0 = R0 + 1
9560 IF R0 = 1 THEN 9580
9561 IF R0 = 2 THEN 9610
9562 IF R0 = 3 THEN 9740
9570 REM ASK HIM IF HE WANTS TO BE REINCARNATED
9580 Z59 = 75 : GOSUB 7620
9590 GOSUB 9860
9600 GOTO 9630
9610 Z59 = 77 : GOSUB 7620
9620 GOTO 9580
9630 IF Z0 = 0 THEN 9750
9640 Z59 = 76 : GOSUB 7620
9650 REM PUT HIM BACK IN HOUSE, REARRANGE HIS STUFF
9660 S ( 18 ) = 7 : L = 0 : DEAD = 0 : KC = 1.03
9670 FOR X = 1 TO T2
9680 IF S ( X ) <> - 1 THEN 9690
9685 S ( X ) = L1
9690 NEXT X
9700 REM WE'VE PUT THE LAMP IN HOUSE AND OTHER ITEMS WHERE HE DIED
9710 L1 = INT ( RND * 4 ) + 1 : L2 = L1
9720 GOTO 320
9730 REM THIRD DEATH--END OF GAME
9740 Z59 = 78 : GOSUB 7620
9750 PRINT "Oh well..."
9760 GOSUB 6430
9762 CLOSE # 1 : CLOSE # 2 : CLOSE # 3
9770 STOP
9780 REM *** PITS ***
9790 IF L1 < 13 THEN 300
9791 IF L = 1 AND ( S ( 18 ) = - 1 OR S ( 18 ) = L1 ) THEN 300
9800 REM IS HE GOING TO FALL INTO A PIT?
9810 IF L1 = 16 OR L1 = 17 OR L1 = 19 OR L1 = 20 OR L1 = 25 OR L1 = 47 OR L1 = 48 OR L1 = 59 OR L1 = 60 OR L1 = 61 OR L1 = 75 OR L1 = 76 OR L1 = 98 THEN 9840
9820 GOTO 300
9830 REM he fell into a pit
9840 Z59 = 44 : GOSUB 7620
9850 GOTO 9540
9860 REM *** SEEK A "YES" OR "NO"
9870 INPUT A$
9875 IF LEN ( A$ ) <> 0 THEN 9880
9877 A$ = " "
9880 A$ = LOWER$ ( MID$ ( A$ , 1 , 1 ) )
9890 IF A$ <> "y" AND A$ <> "n" THEN 9930
9900 IF A$ = "y" THEN 9901 ELSE 9910
9901 Z0 = 1
9910 IF A$ = "n" THEN 9911 ELSE 9920
9911 Z0 = 0
9920 GOTO 9945
9930 PRINT "Yes or No-" ;
9940 GOTO 9870
9945 RETURN
9950 REM ---- SHORT NAMES FOR STUFF ----
9961 DATA "large gold nugget"
9962 DATA "bars of silver"
9963 DATA "precious jewelry"
9964 DATA "many coins"
9965 DATA "several diamonds"
9966 DATA "fragile ming vase"
9967 DATA "glistening pearl"
9968 DATA "nest of golden eggs"
9969 DATA "jewel-encrusted trident"
9970 DATA "egg-sized emerald"
9971 DATA "platinum pyramid"
9972 DATA "golden chain"
9973 DATA "rare spices"
9974 DATA "persian rug"
9975 DATA "treasure chest"
9976 DATA "water"
9977 DATA "oil"
9978 DATA "brass lamp"
9979 DATA "keys"
9980 DATA "food"
9981 DATA "bottle"
9982 DATA "wicker cage"
9983 DATA "3-foot black rod"
9984 DATA "clam"
9985 DATA "magazine"
9986 DATA "bear"
9987 DATA "axe"
9988 DATA "velvet pillow"
9989 DATA "shards of pottery"
9990 DATA "oyster"
9991 DATA "bird"
9992 DATA "troll"
9993 DATA "dragon"
9994 DATA "snake"
9995 DATA "dwarf"
9996 DATA "rock"
9997 DATA "stairs"
9998 DATA "steps"
9999 DATA "house"
10000 DATA "grate"
10001 DATA "stream"
10002 DATA "room"
10003 DATA "bridge"
10004 DATA "pit"
10005 DATA "volcano"
10006 DATA "road"
10007 DATA "everything"
12500 REM INITIALIZE MESSAGE INDEX
12501 OPEN "AMESSAGE.IDX" FOR INPUT AS # 6 ELSE 12505
12502 GOTO 12610
12504 REM Message indx file doesn't exist, create it
12505 OPEN "AMESSAGE.IDX" FOR OUTPUT AS # 6
12506 FPOS = - 2 : B$ = "" : FRACNT = 0 : LASTFRA = - 1 : FSEEK # 3 , 0
12520 FPOS = FPOS + LEN ( B$ ) + 2
12522 INPUT # 3 , B$
12530 IF LEN ( B$ ) = 0 THEN 12531 ELSE 12540
12531 B$ = " " : FPOS = FPOS - 1
12540 IF B$ = "#" THEN 12591
12550 IF INSTR ( B$ , "#" ) = 0 THEN 12520
12560 Z4 = VAL ( MID$ ( B$ , 2 ) )
12570 IF INT ( Z4 ) = Z4 THEN 12580
12571 FRACNT = FRACNT + 1
12572 IF LASTFRA = INT ( Z4 ) THEN 12574
12573 INDX ( INT ( Z4 ) ) = FRACNT : LASTFRA = INT ( Z4 ) : PRINT # 6 , INT ( Z4 ) , "," , FRACNT
12574 FRAINDX ( FRACNT ) = FPOS
12576 GOTO 12585
12580 INDX ( INT ( Z4 ) ) = FPOS
12581 PRINT # 6 , INT ( Z4 ) , "," , FPOS
12585 PRINT "*" ;
12590 GOTO 12520
12591 PRINT # 6 , - 999 , "," , - 999
12592 FOR I = 1 TO FRACNT
12593 PRINT # 6 , FRAINDX ( I )
12594 NEXT I
12595 PRINT # 6 , - 999
12596 CLOSE # 3
12597 OPEN "AMESSAGE" FOR INPUT AS # 3
12600 GOTO 12670
12604 REM READ AMESSAGE.IDX FILE INTO ARRAYS
12610 INPUT # 6 , II , I
12612 PRINT "*" ;
12615 IF I = - 999 THEN 12630
12620 INDX ( II ) = I : GOTO 12610
12630 II = 0
12640 INPUT # 6 , I
12641 PRINT "*" ;
12650 IF I = - 999 THEN 12670
12660 II = II + 1 : FRAINDX ( II ) = I : GOTO 12640
12670 CLOSE # 6 : PRINT : PRINT
12680 RETURN
